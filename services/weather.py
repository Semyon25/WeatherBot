import aiohttp
from config import WEATHER_API_KEY
from datetime import datetime
from typing import Any

WEATHER_URL = "http://api.weatherapi.com/v1/forecast.json"

HOURS_TO_DISPLAY = {
    8: "üåÖ –£—Ç—Ä–æ",
    14: "üåû –î–µ–Ω—å",
    20: "üåá –í–µ—á–µ—Ä"
}


async def fetch_weather_data(city: str, days: int = 2, lang: str = "ru") -> dict[str, Any] | None:
    params = {
        "key": WEATHER_API_KEY,
        "q": city,
        "days": days,
        "lang": lang
    }

    async with aiohttp.ClientSession() as session:
        async with session.get(WEATHER_URL, params=params) as resp:
            if resp.status == 200:
                return await resp.json()
            return None


def parse_current_weather(data: dict[str, Any], city: str) -> str:
    current = data["current"]
    temp = int(current["temp_c"])
    feels = int(current["feelslike_c"])
    condition = current["condition"]["text"]
    wind_ms = round(current["wind_kph"] / 3.6, 1)
    humidity = current["humidity"]

    return (
        f"üå§ –°–µ–π—á–∞—Å –≤ {city}:\n"
        f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels}¬∞C)\n"
        f"üå• –°–æ—Å—Ç–æ—è–Ω–∏–µ: {condition}\n"
        f"üí® –í–µ—Ç–µ—Ä: {wind_ms} –º/—Å\n"
        f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%"
    )


def format_forecast_day(forecast_data: dict[str, Any], label: str) -> str:
    raw_date = datetime.strptime(forecast_data["date"], "%Y-%m-%d")
    date_str = raw_date.strftime("%d.%m.%Y")

    parts = [f"\nüìÖ {label} ({date_str}):"]
    for hour, time_label in HOURS_TO_DISPLAY.items():
        hour_data = forecast_data["hour"][hour]
        temp = int(hour_data["temp_c"])
        condition = hour_data["condition"]["text"]
        wind = round(hour_data["wind_kph"] / 3.6, 1)

        parts.append(f"{time_label}: {temp}¬∞C, {condition}, üí® {wind} –º/—Å")

    return "\n".join(parts)


async def get_weather(city: str) -> str:
    data = await fetch_weather_data(city)
    if not data:
        return "‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ."

    current_weather = parse_current_weather(data, city)
    forecast_days = data["forecast"]["forecastday"]
    today = format_forecast_day(forecast_days[0], "–°–µ–≥–æ–¥–Ω—è")
    tomorrow = format_forecast_day(forecast_days[1], "–ó–∞–≤—Ç—Ä–∞")

    return f"{current_weather}\n\n{today}\n\n{tomorrow}"

async def is_weather_available(city: str) -> bool:
    url = "http://api.weatherapi.com/v1/current.json"
    params = {
        "key": WEATHER_API_KEY,
        "q": city,
        "lang": "ru"
    }

    async with aiohttp.ClientSession() as session:
        async with session.get(url, params=params) as resp:
            if resp.status != 200:
                return False
            data = await resp.json()
            # WeatherAPI –≤–µ—Ä–Ω—ë—Ç "error" –≤ JSON –ø—Ä–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º –≥–æ—Ä–æ–¥–µ
            return "error" not in data
